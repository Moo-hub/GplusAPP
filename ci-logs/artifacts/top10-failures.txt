Top 10 failing tests (from frontend/vitest-report.xml - run 18606592688, artifact 4304657158)

[1] src/__tests__/useErrorHandler.test.js :: clearError should reset error state
Type: AssertionError
Message excerpt: "expected Error: Test error to be null" — received Error { "message": "Test error" }
Quick suggestion: The test expects error to be null immediately. Convert to an async assertion and wait for the error to clear:
  await waitFor(() => expect(getByTestId('error-state')).toBeNull())
Or assert the state after invoking clearError with await: await act(() => clearError());

[2] src/__tests__/useLoadingIndicator.test.jsx :: should start and stop loading
Type: AssertionError
Message excerpt: "expected false to be true // Object.is equality"
Quick suggestion: Use async waits around loading state changes (findBy or waitFor) or wrap state changes in act:
  await waitFor(() => expect(queryByTestId('global-loading')).toBeInTheDocument())

[3] src/__tests__/useLoadingIndicator.test.jsx :: should wrap a promise with loading state
Type: AssertionError + act() warning + Timeout
Message excerpt: "The current testing environment is not configured to support act(...)" and timed out waiting for loading state
Quick suggestion: Ensure tests use async/await and real timers or call await act(async () => { ... }). Increase test timeout if needed. Prefer await findBy* for DOM checks.

[4] src/components/__tests__/Companies.test.jsx :: Companies > renders companies list
Type: TypeError
Message excerpt: "i18n.getFixedT is not a function"
Root cause: test environment's react-i18next mock missing getFixedT. The centralized `setupTests.js` should mock react-i18next correctly.
Quick suggestion: In `frontend/src/setupTests.js` ensure the i18n mock provides getFixedT and useTranslation hook shim, e.g.:
  const i18n = { language: 'en', t: k => k, getFixedT: () => (k)=>k }
  vi.mock('react-i18next', () => ({ useTranslation: () => ({ t: (k)=>k }), I18nextProvider: ({children})=>children }));

[5] src/components/__tests__/GenericScreen.test.jsx :: shows loading initially
Type: TypeError
Message excerpt: "i18n.getFixedT is not a function"
Quick suggestion: Same as [4] — ensure react-i18next mock exposes getFixedT and load occurs before tests.

[6] src/components/__tests__/GenericScreen.test.jsx :: renders data when API succeeds
Type: TypeError
Message excerpt: "i18n.getFixedT is not a function"
Quick suggestion: Same fix as [4]/[5]. Also ensure MSW is running in setupTests and handlers return expected data.

[7] src/components/__tests__/GenericScreen.test.jsx :: shows error when API fails
Type: TypeError
Message excerpt: "i18n.getFixedT is not a function"
Quick suggestion: Same as above.

[8] src/components/__tests__/GenericScreen.test.jsx :: allows retry after error
Type: TypeError
Message excerpt: "i18n.getFixedT is not a function"
Quick suggestion: Same as above.

[9] src/components/__tests__/Pickup.integration.test.jsx :: Pickup Screen Integration > renders pickups and creates new pickup
Type: Error (expect element toBeInTheDocument)
Message excerpt: "element could not be found in the document"
Quick suggestion: Test likely asserts presence synchronously. Use await findByText / findByRole or wrap network/async actions in await waitFor(...) and ensure MSW handler returns expected sample pickups.

[10] src/components/__tests__/Points.test.jsx :: Points > shows loading initially
Type: Error (expect element toBeInTheDocument)
Message excerpt: "element could not be found in the document"
Quick suggestion: Convert synchronous getBy* checks to await findBy* or waitFor assertions. Confirm MSW returns the loading state markup and that renderWithProviders includes providers used by Points (QueryClientProvider + MSW).

Common root causes observed:
- react-i18next mock missing `getFixedT` (affects many suites).
- Tests making synchronous assertions on async UI (use findBy/waitFor or wrap with act).
- MSW/handlers or test bootstrap not loaded early in worker lifecycle for some integration tests (ensure setupFiles run before tests and MSW is started in setupTests).

Next actions I can take (pick one):
1) Apply an immediate patch to `frontend/src/setupTests.js` to add/ensure an i18n mock exposing `getFixedT` and restart CI.
2) Open small PRs converting the top failing tests to async-friendly patterns (show examples). I'll prepare patches for 1) then 2) if you approve.

File generated by assistant on 2025-10-18.
