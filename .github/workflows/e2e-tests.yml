name: E2E Testing

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [main, develop]

jobs:
  cypress-tests:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Split tests into groups for parallel execution
        group: [user-flows, authentication, api, performance, accessibility]
    
    services:
      # Start the database
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gplus_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Setup backend
        run: |
          cd backend
          npm ci
          npm run setup-test-db
          npm run start:test &
          echo "Waiting for backend to start..."
          npx wait-on http://localhost:8000/api/health -t 60000
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/gplus_test
          JWT_SECRET: test_secret_key_for_ci
      
      - name: Build frontend
        run: npm run build
      
      - name: Start frontend server
        run: |
          npm run preview &
          echo "Waiting for frontend to start..."
          npx wait-on http://localhost:4173 -t 30000
      
      - name: Run Cypress tests - ${{ matrix.group }}
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          record: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          spec: |
            ${{ matrix.group == 'user-flows' && 'cypress/e2e/user-journey.cy.js cypress/e2e/pickup-workflow.cy.js' || '' }}
            ${{ matrix.group == 'authentication' && 'cypress/e2e/authentication.cy.js' || '' }}
            ${{ matrix.group == 'api' && 'cypress/e2e/api-tests.cy.js' || '' }}
            ${{ matrix.group == 'performance' && 'cypress/e2e/performance-tests.cy.js' || '' }}
            ${{ matrix.group == 'accessibility' && 'cypress/e2e/accessibility.cy.js cypress/e2e/mobile-responsiveness.cy.js' || '' }}
          config: baseUrl=http://localhost:4173
        env:
          CYPRESS_API_URL: http://localhost:8000/api
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY || '' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.group }}
          path: cypress/screenshots
      
      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-${{ matrix.group }}
          path: cypress/videos
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: coverage-${{ matrix.group }}
          path: coverage

  cypress-component:
    name: Cypress Component Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run component tests
        uses: cypress-io/github-action@v5
        with:
          component: true
          browser: chrome
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: component-screenshots
          path: cypress/screenshots
      
      - name: Upload component test coverage
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: coverage-component
          path: coverage

  combine-coverage:
    name: Combine Test Coverage
    needs: [cypress-tests, cypress-component]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install nyc
        run: npm install -g nyc
      
      - name: Download all coverage reports
        uses: actions/download-artifact@v3
        with:
          path: coverage-reports
      
      - name: Combine coverage reports
        run: |
          mkdir combined-coverage
          nyc merge coverage-reports combined-coverage/coverage.json
          cd combined-coverage
          npx nyc report --reporter=lcov --reporter=text --reporter=json
      
      - name: Upload combined coverage
        uses: actions/upload-artifact@v3
        with:
          name: combined-coverage-report
          path: combined-coverage
      
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./combined-coverage
          flags: e2e,component
          name: gplus-codecov
          fail_ci_if_error: false
          verbose: true

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: [cypress-tests]
    if: success() && (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        run: npm run build
      
      - name: Start preview server
        run: |
          npm run preview &
          echo "Waiting for server to start..."
          npx wait-on http://localhost:4173 -t 30000
      
      - name: Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4173/
            http://localhost:4173/login
            http://localhost:4173/dashboard
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.github/lighthouse-config.json'

  notify:
    name: Notify on completion
    needs: [cypress-tests, cypress-component, combine-coverage]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check test status
        id: status
        run: |
          if [[ "${{ needs.cypress-tests.result }}" == "success" && "${{ needs.cypress-component.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ E2E and Component tests passed successfully!" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=❌ Some tests failed. Check the logs for details." >> $GITHUB_OUTPUT
          fi
      
      - name: Create status comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = "${{ steps.status.outputs.status }}";
            const message = "${{ steps.status.outputs.message }}";
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Test Results
              
              ${message}
              
              [View test run details](${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID})
              `
            });