name: Repository Dispatch Listener

on:
  repository_dispatch:
    types: [run-ci-for-branch]
  workflow_dispatch: {}

permissions:
  contents: read
  actions: write

jobs:
  run-frontend-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Checkout the branch requested by repository_dispatch (client_payload.ref).
          # Fallback to the event ref if client_payload isn't provided.
          ref: ${{ github.event.client_payload.ref || github.ref }}
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install repository-level deps
        run: |
          npm ci

      - name: Install frontend deps
        working-directory: frontend
        run: |
          npm ci

      - name: Debug repo state
        run: |
          echo "Branch/commit:"
          git rev-parse --abbrev-ref HEAD || true
          git rev-parse HEAD || true
          echo "App.jsx head (first 80 lines):"
          sed -n '1,80p' frontend/src/App.jsx || true

      - name: Run Vitest (frontend)
        working-directory: frontend
        run: |
          # run Vitest using the project's config; produce both dot output and a junit file for artifact upload
          npx vitest --config vitest.config.js --run --reporter dot --reporter junit --outputFile=vitest-report.xml

      - name: Upload Vitest JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-report
          path: frontend/vitest-report.xml
