# Full CI/CD Pipeline for GplusApp
# This workflow handles testing, building, and deploying both frontend and backend components

name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install --upgrade pip
      - run: pip install -r backend/requirements.txt
      - run: pytest --cov=backend --disable-warnings
        working-directory: ./backend
      - uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/htmlcov

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: ./frontend
      - run: npx eslint . --ext .js,.jsx
        working-directory: ./frontend
      - run: npx prettier --check .
        working-directory: ./frontend
      - run: npm test -- --coverage --watchAll=false
        working-directory: ./frontend
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend/coverage

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: frontend-tests
    steps:
      - uses: actions/checkout@v4
      # Deploy to Vercel
      # Required secrets:
      # - VERCEL_TOKEN: Your Vercel API token (https://vercel.com/account/tokens)
      # - VERCEL_ORG_ID: Your Vercel organization ID
      # - VERCEL_PROJECT_ID: Your Vercel project ID
      - uses: amondnet/vercel-action@v41.1.4
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  deploy-backend:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - uses: actions/checkout@v4
      # Log in to Docker Hub
      # Required secrets:
      # - DOCKER_USERNAME: Your Docker Hub username
      # - DOCKER_PASSWORD: Your Docker Hub password or access token
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gplus-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/gplus-backend:latest

  notify-slack:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, deploy-frontend, deploy-backend]
    if: always()
    steps:
      # Send Slack notification
      # Required secret:
      # - SLACK_WEBHOOK_URL: Your Slack webhook URL for notifications
      - uses: slackapi/slack-github-action@v2.1.1
        with:
          # Use webhook-type: incoming-webhook for using a Slack incoming webhook
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "${{ job.status == 'success' && ':white_check_mark: CI/CD pipeline succeeded! All tests passed and deployments completed.' || ':x: CI/CD pipeline failed! Check the jobs for details.' }}"
            }
